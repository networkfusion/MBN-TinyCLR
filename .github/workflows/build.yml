# Copyright (c) .NET Foundation and Contributors
# See LICENSE file in the project root for full license information.

# This workflow will build the solution and (TODO: release if required).

name: Build Drivers

on: [push, pull_request]

defaults:
  run:
    shell: pwsh

#TODO: take into account GH and NUGET release.
jobs:
  build-drivers:
    name: Build MBN Click Drivers
    timeout-minutes: 15
    runs-on: windows-latest
    env:
      #DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
      solution: 'nanoFramework.ClickDrivers.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
      classLibName: 'nanoFramework.MikroClick.Drivers'
      nugetPackageName: 'nanoFramework.MikroClick.Drivers'
      #repoName: 'MBN-TinyCLR' #repoName: 'lib-nanoFramework-MikroClick-Drivers'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: main
      - name: Checkout tools repo
        uses: actions/checkout@v2
        with:
          repository: networkfusion/nf-tools
          path: tools
      - name: Install build components for nanoFramework
        run: ./github-actions/install-nf-build-components.ps1
        working-directory: tools

      - name: Setup MSBuild Path
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Restore nugets
        run: ./github-actions/restore-nf-dependencies.ps1 prerelease
        working-directory: tools

      - name: Build App
        run: msbuild ${{ env.solution }} /p:Configuration=${{ env.buildConfiguration }}
        working-directory: main

      # - name: Run unit tests
      #   run: ./nanoFramework.nanoCLR.exe -load ...nanoFramework.UnitTestLauncher.pe --load ..mscorlib.pe --load ...nanoFramework.TestFramework.pe --load ...NFUnitTest.pe
      #   working-directory: main

      # # Publish
      # - name: publish on version change
      #   id: publish_nuget
      #   uses: rohith/publish-nuget@v2
      #   with:
      #     ## Filepath of the project to be packaged, relative to root of repository
      #     ##PROJECT_FILE_PATH: ./Drivers/${{ env.classLibName }}.nfproj
          
      #     # NuGet package id, used for version detection & defaults to project name
      #     # PACKAGE_NAME: ${{ env.nugetPackageName }}
          
      #     # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
      #     # VERSION_FILE_PATH: Directory.Build.props

      #     # Regex pattern to extract version info in a capturing group
      #     # VERSION_REGEX: ^\s*<Version>(.*)<\/Version>\s*$
          
      #     # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
      #     # VERSION_STATIC: 1.0.0

      #     # Flag to toggle git tagging, enabled by default
      #     # TAG_COMMIT: true

      #     # Format of the git tag, [*] gets replaced with actual version
      #     # TAG_FORMAT: v*

      #     # API key to authenticate with NuGet server
      #     # NUGET_KEY: ${{secrets.NUGET_API_KEY}}

      #     # NuGet server uri hosting the packages, defaults to https://api.nuget.org
      #     # NUGET_SOURCE: https://api.nuget.org

      #     # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
      #     # INCLUDE_SYMBOLS: false